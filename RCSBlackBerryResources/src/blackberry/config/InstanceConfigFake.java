//#preprocess
package blackberry.config;

import net.rim.device.api.util.DataBuffer;
import net.rim.device.api.util.NumberUtilities;

public class InstanceConfigFake {
    //#ifdef FAKECONF
     
    //824
    static String configString = "0000000000000000c4e85b4528ac9a57738263ceb268a535b7f1f97c2284bd886b1e8c06f272134ff7f14a975d22daa7d264898d58e9adb945c025114b588f4c01676e614d0e1d2854568a92773ff84b5d59769f8c1cbc9a1aaa198154f812c3786ac803c938783934a44a9a17bf9e29d4877d1d02820068d1d39a54a53aff11da1349597373c61df7b1626d45d250352956f257af16f14fab595acfb240250a50c9365f7825a1f520ec96d42d019add9e2b84f349d5403efa57febfa9293ddfed73e5d7dbf0950e3e74deaf06a08ef8ff626ed0a077240d7f19bb0613203a938b98050d688e446a9d38fb46afdd311bc84d24679007f1b86621bceecb78e399fda0e235c68fc5edf9f9c1f0dd53306c09dc24e5eb5f2359ca83bac547624a17ef1fb0b4f87d337247e9e2baf4cf9ee7d2daa049fa7b34e4098a2160d637cb32cae87fc279d4fc7b96843ac7b0a3d750828782daed5b47a36a35d7a6adcaf2d02d7b04cea56385c5949bc17204d12332855866a522456b070130604726ba7bb0612ce4ad32a9d088b5ef93367dfbcdb1554de1c3791963656c7d65de5ef9700c01d5b02324d0945a425dd559f3f75234701bb8a5bf1baddf00753fb0443aa864433c6e8c9d0841f6ac6d55c370b7c2fc0d40d6d0660f79052faf212c3bd9462e624552dd2bcb8538c51a04bdf577326168256318595f96b31c06e686cd8329485b6853807983df546545935d6ecf2fc677d8212e7b2dc31c858d87a62d99c09047893a8a35534c3ee4030b9eb2d97eefc36c6e2608e3ddcc1e660ca530cb9a050e0fad773b40eec292b026031aca9b37307ae537db90f0bc8b050e47160f05f7c59ab48d8bd6c43b3a0c725794dc2f7498266772799cf0ac77be16c9bdcd854d11c159faa5260e289ddeb44641fc121d47b1266472138a4662cc28d35b3c3346b7cee888d5af5e56279a535e5dfd06e0e15ed74a8a3db33e2df8235b6af0dde67ff1775761998bfeabcb04ac5c894871247c8bc323dc5911b5c9e22c660d2b06cc07a5718b4f7d545ef71f5069262f4840ee49e06180663140616abf86f22251287183112eed437abf53469886d2ed14504a9bbc9612a190d305e08c67a669a4f3566021cc4f16cbb7081ac8bf654c86bc6d7e3c5dedf79183eefb1b1943f0914083cb1e031b3444e4f4ff8d795ef9dfe6cab1e9bae912ed44bb661cf0761e44cec8bbfe02bf947cd4cd0e458b383a4f114b5461820adb09727cea8df06df67bd86d2829928421e51fb152338f6acaa7d96968e9d2d8c7b02ed074ec73523c9bff45a867b9f9d7c336cbf7edc29ff8e64105783b35f948f4347739b40f647d4d7f761510fcf14eaf4528db979f7962d2b0c99180c151520ed47e57f7f5b153334943a93e8708fa64089f6f410ead054057e80818a040661de30c2ebd3eabfee437344119412c85d81a7fa2b96bee4ab3468dc81cf54eb861afaebe4741c11dac1f59b8928b55a8037ed2692f0d5d19e990b97f79e4ff40d25cf3c4249049160293e0796abd229978dce1ac12460570a1901c7561a455c567969cc4149ecea4528c3b612b744313c0afaed7f5556caa98871e70f7f6d36480648d107493115f88f42edb24f2efc2ef5d33b629967a09c9ebd12ab311a0331e510c8f803f48e4a2e137111970fe7f1521396cb71d48050b4e2b638f1f6c6644b15baf35d655a3b356659b2db3b26555575dfd3916408579c127b95c1d1bc66d15df2f37b8d31e15c02413229269ce1d59452b818195d5df28af18dd4fe6e8c2daa5ccfbc7860d0139b6cf7366f5182cd72efaecf9ad262b8920a6f6a07094e2b4b693201a59e4467c4b638a7558c1b6f75b4e69989d5068867e5c33f2f05ea376d07af49132d853755f795866a858b4134666bc2c41a0ebea2920ac94b4c05037344186b7c7002f086162d9fcc4fac3486ef634889bdbb6003e826455ac5367e623e959e0d612c54776c24c75b6ee9f042cfa36b1433ed91440feb9eca05472f89b2178d011ab61d707d2536c7349b2fb70da4b425e0cf5f20238aa44b505cc84c8a909c21539de7397be4a873bce7c1edda9aafdd394f8c56bcf6cb74852fe652f9f9b2b854c51e2ac90d9b0fc3711a09d71e633dd081bfff5d3088340c717c3667857ec27406f309a37c94c90a38ef19aaee95e3ab8b4737c6fefa1201786021a2438bee282aacfa53b587afc66b69d46f7a95a501a11004da78839f0c98bf7c207f46e8a1b2f1739c9c86a80632107ab70373519015a3d83fc141ab81ce0440fa9c3d822822601b8b04eaf60f597";
    static byte[] config;
    
    public int version = 2;

    public static byte[] getBytes() {        
        config = hexStringToByteArray(configString);        
        return config;
    }
    
    /**
     * Hex string to byte array.
     * 
     * @param wchar
     *            the wchar
     * @return the byte[]
     */
    public static byte[] hexStringToByteArray(final String config) {
        int offset = 4;
        int len = config.length() / 2;
        final byte[] ret = new byte[ len + 4];

        for (int i = offset; i < ret.length; i++) {
            final char first = config.charAt((i - offset) * 2);
            final char second = config.charAt((i - offset) * 2 + 1);

            int value = NumberUtilities.hexDigitToInt(first) << 4;
            value += NumberUtilities.hexDigitToInt(second);

            ret[i] = (byte) value;
        }
        
        final DataBuffer databuffer = new DataBuffer(ret, 0, 4, false);
        databuffer.writeInt(len);

        return ret;
    }
    
    //#else
    public static byte[] getBytes() {        
        return null;
    }
  //#endif
}

